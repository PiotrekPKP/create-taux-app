#! /usr/bin/env node
import _ from"inquirer";import x from"gradient-string";import c from"path";import{fileURLToPath as v}from"url";var h=v(import.meta.url),b=c.dirname(h),l=c.join(b,"../"),p=`
\u2591\u2588\u2580\u2584\u2591\u2588\u2580\u2580\u2584\u2591\u2588\u2580\u2580\u2591\u2588\u2580\u2580\u2584\u2591\u2580\u2588\u2580\u2591\u2588\u2580\u2580\u2591\u2591\u2591\u2591\u2580\u2588\u2580\u2591\u2588\u2580\u2580\u2584\u2591\u2588\u2591\u2592\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2584\u2591\u2584\u2580\u2580\u2584\u2591\u2584\u2580\u2580\u2584
\u2591\u2588\u2591\u2591\u2591\u2588\u2584\u2584\u2580\u2591\u2588\u2580\u2580\u2591\u2588\u2584\u2584\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2591\u2591\u2588\u2591\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2591\u2592\u2588\u2591\u2584\u2580\u2584\u2591\u2580\u2580\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588
\u2591\u2580\u2580\u2580\u2591\u2580\u2591\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2580\u2580\u2580\u2591\u2580\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591
`;var T=/^(?:@[a-z0-9-*~][a-z0-9-*._~]*\/)?[a-z0-9-~][a-z0-9-._~]*$/,m=e=>{let t=e.split("/"),r=t.findIndex(n=>n.startsWith("@")),o=t[t.length-1];return t.findIndex(n=>n.startsWith("@"))!==-1&&(o=t.slice(r).join("/")),e==="."||T.test(o??"")?!0:"App name must consist of only lowercase alphanumeric characters, '-', and '_'"},f=()=>{console.log(x(["#FF006B","#0085FF"]).multiline(p))};import A from"ora";import d from"path";import u from"inquirer";import a from"fs-extra";import i from"chalk";var g=async e=>{let t=A("Setting up your project...").start(),r=d.resolve(process.cwd(),e),o=d.join(l,"template");if(a.existsSync(r))if(a.readdirSync(r).length===0)e!=="."&&t.info(`${i.cyan.bold(e)} exists but is empty, continuing...
`);else{t.stopAndPersist();let{overwriteDir:s}=await u.prompt({name:"overwriteDir",type:"list",message:`${i.redBright.bold("Warning:")} ${i.cyan.bold(e)} already exists and isn't empty. How would you like to proceed?`,choices:[{name:"Abort installation (recommended)",value:"abort",short:"Abort"},{name:"Clear the directory and continue installation",value:"clear",short:"Clear"},{name:"Continue installation and overwrite conflicting files",value:"overwrite",short:"Overwrite"}],default:"abort"});s==="abort"&&(t.fail("Aborting installation..."),process.exit(1));let y=s==="clear"?"clear the directory":"overwrite conflicting files",{confirmOverwriteDir:w}=await u.prompt({name:"confirmOverwriteDir",type:"confirm",message:`Are you sure you want to ${y}?`,default:!1});w||(t.fail("Aborting installation..."),process.exit(1)),s==="clear"&&(t.info(`Emptying ${i.cyan.bold(e)} and creating t3 app..
`),a.emptyDirSync(r))}t.start(),a.copySync(o,r);let n=e==="."?"App":i.cyan.bold(e);t.succeed(`${n} ${i.green("scaffolded successfully!")}
`)};var D=async()=>{f();let{projectName:e}=await _.prompt({message:"How is your project called?",name:"projectName",transformer:t=>t.trim(),validate:m});console.log(),await g(e)};await D();
//# sourceMappingURL=index.js.map